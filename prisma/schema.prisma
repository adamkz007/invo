generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                   String     @id @default(cuid())
  name                 String?
  email                String?     @unique
  phoneNumber          String?     @unique
  passwordHash         String?
  createdAt            DateTime   @default(now())
  updatedAt            DateTime   @updatedAt
  stripeCustomerId     String?
  stripeSubscriptionId String?
  stripePriceId        String?
  subscriptionStatus   String?
  trialStartDate       DateTime?
  trialEndDate         DateTime?
  currentPeriodEnd     DateTime?
  company              Company?
  customers            Customer[]
  invoices             Invoice[]
  products             Product[]
  receipts             Receipt[]
}

model Customer {
  id          String    @id @default(cuid())
  name        String
  email       String?
  phoneNumber String?
  address     String?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  invoices    Invoice[]
}

model Product {
  id                     String        @id @default(cuid())
  name                   String
  description            String?
  price                  Float
  quantity               Int           @default(0)
  sku                    String?
  disableStockManagement Boolean       @default(false)
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt
  userId                 String
  invoiceItems           InvoiceItem[]
  receiptItems           ReceiptItem[]
  user                   User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Invoice {
  id             String        @id @default(cuid())
  invoiceNumber  String        @unique
  issueDate      DateTime      @default(now())
  dueDate        DateTime
  status         String        @default("DRAFT")
  subtotal       Float
  taxRate        Float         @default(0)
  taxAmount      Float         @default(0)
  discountRate   Float         @default(0)
  discountAmount Float         @default(0)
  total          Float
  paidAmount     Float         @default(0)
  notes          String?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  customerId     String
  userId         String
  customer       Customer      @relation(fields: [customerId], references: [id], onDelete: Cascade)
  user           User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  items          InvoiceItem[]
}

model InvoiceItem {
  id          String   @id @default(cuid())
  quantity    Int
  unitPrice   Float
  amount      Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  invoiceId   String
  productId   String
  invoice     Invoice  @relation(fields: [invoiceId], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Company {
  id                     String   @id @default(cuid())
  legalName             String?
  ownerName             String?
  address               String?
  phoneNumber           String?
  email                 String?
  registrationNumber    String?
  taxIdentificationNumber String?
  termsAndConditions    String?
  paymentMethod         String?
  bankAccountName       String?
  bankName              String?
  bankAccountNumber     String?
  qrImageUrl            String?
  msicCode              String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  userId                String   @unique
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Receipt {
  id            String        @id @default(cuid())
  receiptNumber String        @unique
  customerName  String
  customerPhone String?
  receiptDate   DateTime      @default(now())
  paymentMethod String        @default("CASH")
  total         Float
  notes         String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  items         ReceiptItem[]
}

model ReceiptItem {
  id          String   @id @default(cuid())
  quantity    Int
  unitPrice   Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  receiptId   String
  productId   String
  product     Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  receipt     Receipt  @relation(fields: [receiptId], references: [id], onDelete: Cascade)
}
